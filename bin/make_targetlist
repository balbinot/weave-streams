#!/usr/bin/env python

import weave_streams.WideStreams_targetlist as W
import argparse
import os
import os.path
if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Produces STREAMSWIDE FITS \
                                     catalogue, including external and      \
                                     intermediate dataframes')
    parser.add_argument('sname',
                        type=str,
                        nargs='+',
                        help='name of stream [gd1, pal5, orphan or tripsc]')
    parser.add_argument('--input',
                        type=str,
                        required=True,
                        nargs='+',
                        help='output filename')
    parser.add_argument('--clobber', action=argparse.BooleanOptionalAction)
    parser.add_argument('--pointed', action=argparse.BooleanOptionalAction)
    parser.set_defaults(clobber=False)
    parser.set_defaults(pointed=False)
    
    args = parser.parse_args()
    
    if args.pointed:
        print("DOING POINTED FITS CREATION")
        W.formatFits(args.input, pointed=True) ## Concatenate and add external catalogues

    else:
        for s, i in zip(args.sname, args.input):
            if os.path.isfile(i.replace('.hdf5', '_filtered.hdf5')) and args.clobber:
                # File exists, but you want to overwrite
                W.filter_data(s, i) ## Apply filter to dataframe
            elif os.path.isfile(i.replace('.hdf5', '_filtered.hdf5')) and ~args.clobber:
                # File exists, but you DO NOT want to overwrite
                pass
            else:
                W.filter_data(s, i) ## Apply filter to dataframe
        
        filtered = [i.replace('.hdf5', '_filtered.hdf5') for i in args.input]
        W.formatFits(filtered) ## Concatenate and add external catalogues
